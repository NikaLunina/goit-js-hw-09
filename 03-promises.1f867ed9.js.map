{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SAAAC,QAAQC,IAAI,KAGZ,IAAMC,EAAQC,SAASC,cAAc,uBAC/BC,EAAOF,SAASC,cAAc,sBAC9BE,EAASH,SAASC,cAAc,wBAGtC,SAASG,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3BC,YAAW,WACaC,KAAKC,SAAW,GAEpCJ,EAAQ,CAAEH,WAAUQ,MAAAP,IAEpBG,EAAO,CAAEJ,WAAUQ,MAAAP,G,GAEpBA,E,IAXWN,SAASC,cAAc,yBAe/Ba,iBAAiB,SAAS,SAAAC,GAClCA,EAAMC,iBACN,IAAIC,EAAaC,OAAOnB,EAAMoB,OAC1BC,EAAYF,OAAOhB,EAAKiB,OACxBE,EAAcH,OAAOf,EAAOgB,OAChC,GAAGF,EAAa,GAAKG,EAAY,GAAKC,GAAe,EACnD,OAAQC,EAAA3B,GAAS4B,OAAOC,QAAQ,2CAE9B,IAAC,IAAIC,EAAI,EAAGA,EAAIJ,EAAaI,GAAK,EACpCrB,EAAc,EAAIqB,EAAGR,EAAaQ,EAAIL,GACnCM,MAAK,SAAAC,G,IAAGtB,EAAQsB,EAARtB,SAAUuB,EAAKD,EAALd,MACjBS,EAAA3B,GAAS4B,OAAOM,QACd,uBAAwCC,OAAfzB,EAAS,QAAYyB,OAANF,EAAM,M,IAGjDG,OAAM,SAAAJ,G,IAAGtB,EAAQsB,EAARtB,SAAU2B,EAAKL,EAALd,MAClBS,EAAA3B,GAAS4B,OAAOC,QACd,sBAAqCM,OAAfzB,EAAS,QAAYyB,OAANE,EAAM,M","sources":["src/js/03.js"],"sourcesContent":["console.log(123);\nimport Notiflix from 'notiflix';\n\nconst delay = document.querySelector('input[name=\"delay\"]');\nconst step = document.querySelector('input[name=\"step\"]');\nconst amount = document.querySelector('input[name=\"amount\"]');\nconst createBtn = document.querySelector('button[type=\"submit\"]');\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      const shouldResolve = Math.random() > 0.3;\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n\ncreateBtn.addEventListener('click', event => {\n  event.preventDefault();\n  let delayValue = Number(delay.value);\n  let stepValue = Number(step.value);\n  let amountValue = Number(amount.value);\n  if(delayValue < 0 || stepValue < 0 || amountValue <= 0 ){\n    return  Notiflix.Notify.failure('Please enter values ​​greater than zero')\n  }\n  for (let i = 0; i < amountValue; i += 1) {\n    createPromise(1 + i, delayValue + i * stepValue)\n      .then(({ position, delay }) => {\n        Notiflix.Notify.success(\n          `✅ Fulfilled promise ${position} in ${delay}ms`\n        );\n      })\n      .catch(({ position, delay }) => {\n        Notiflix.Notify.failure(\n          `❌ Rejected promise ${position} in ${delay}ms`\n        );\n      });\n  }\n});\n"],"names":["$6JpON","parcelRequire","console","log","$45a430b0778fef83$var$delay","document","querySelector","$45a430b0778fef83$var$step","$45a430b0778fef83$var$amount","$45a430b0778fef83$var$createPromise","position","delay1","Promise","resolve","reject","setTimeout","Math","random","delay","addEventListener","event","preventDefault","delayValue","Number","value","stepValue","amountValue","$parcel$interopDefault","Notify","failure","i","then","param","delay2","success","concat","catch","delay3"],"version":3,"file":"03-promises.1f867ed9.js.map"}